var Vector=function(){this.x=0,this.y=0,this.sub=function(t){const e=new Vector;return e.x=this.x-t.x,e.y=this.y-t.y,e},this.mul=function(t){const e=new Vector;return e.x=this.x*t,e.y=this.y*t,e},this.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)}};Vector.create=function(t,e){const i=new Vector;return i.x=t,i.y=e,i};var BankRobberValidator=function(){const t=[800,1600,2400];this.initializeData={},this.gameEvents=[],this.currentEventIndex=-1,this.currentState={},this.unOptimizeVector=function(t){return{x:t[0],y:t[1],z:t[2]}},this.unOptimizeVectors=function(t){for(var e=[],i=0;i<t.length;i++)e.push(this.unOptimizeVector(t[i]));return e},this.unOptimizeObstacleData=function(t){return{width:t[0],height:t[1],position:this.unOptimizeVector(t[2])}},this.unOptimizeObstaclesData=function(t){for(var e=[],i=0;i<t.length;i++)e.push(this.unOptimizeObstacleData(t[i]))},this.unOptimizePoliceData=function(t){const e=0!==t[1];return{speed:t[0],isChansing:e,position:this.unOptimizeVector(t[2])}},this.unOptimizePolicesData=function(t){for(var e=[],i=0;i<t.length;i++)e.push(this.unOptimizePoliceData(t[i]));return e},this.unOptimizePlayerData=function(t){return{speed:t[0],position:this.unOptimizeVector(t[1])}},this.unOptimizeGameEvent=function(t,e){return 0==t?{initData:{startTime:e[0],player:this.unOptimizePlayerData(e[1]),polices:this.unOptimizePolicesData(e[2]),obstacles:this.unOptimizeObstaclesData(e[3]),vanPoint:this.unOptimizeVector(e[4]),grabMoneyPoints:this.unOptimizeVectors(e[5])}}:1==t||2==t?{carryMoney:e[0],position:this.unOptimizeVector(e[1]),polices:this.unOptimizePolicesData(e[2]),gateNumber:e[3]}:3==t?{position:this.unOptimizeVector(e[0]),addedMoney:e[1],totalMoney:e[2]}:4==t?{position:this.unOptimizeVector(e[0]),lostMoney:e[1]}:5==t?{position:this.unOptimizeVector(e[0])}:6==t||7==t?{boss:this.unOptimizePoliceData(e[0]),wantedLevel:e[1]}:8==t?[]:10==t?[]:11==t?[]:t==EVENT_INVALID_ACTION?{invalidAction:{eventCode:e[0]}}:e[0]},this.unOptimizeData=function(t){for(var e=[],i=0;i<t.length;i++){const a=t[i];e.push({elapsedTime:a[0],eventCode:a[1],eventData:this.unOptimizeGameEvent(a[1],a[2])})}return e},this.returnSef=function(t){return t},this.getResult=function(t,e){return 0==t&&console.log(e),{result:t,info:e}},this.validateEventDataStructure=function(t){return void 0!=t.eventCode&&void 0!=t.eventData?this.getResult(!0,"OK"):this.getResult(!1,"Invalid event data, eventCode: "+t.eventCode+", eventData: "+t.eventData)},this.cancelRobbingAndResetGrabInfo=function(){this.currentState.grabInfo.isGrabbing=!1,this.currentState.grabInfo.startTime=-1,this.currentState.grabInfo.maxTimeToPoliceArrive=-1,this.currentState.grabInfo.gateNumber=-1},this.recordPlayerPosition=function(t){this.currentState.player.position=t.eventData.position,this.currentState.player.recordTime=t.elapsedTime},this.validate=function(t){if(!1===Array.isArray(t)||t.length<=0)return this.getResult(!1,"Invalid gameEvents data, is not array or empty array.");{const n=this.unOptimizeData(t);var e=n[0];const r=n[n.length-1];let s=this.validateEventDataStructure(e);if(!1===s.result)return s;if(!1===(s=this.validateEventDataStructure(r)).result)return s;if(0!=e.eventCode)return this.getResult(!1,"Invalid gameEvents data, can not find EVENT_START_RECORD at index 0 on events list to initialize the simulator.");if(8!=r.eventCode)return this.getResult(!1,"Invalid gameEvents data, can not find EVENT_STOP_RECORD at last index of events list to initialize the simulator.");if(e.eventData.initData){this.gameEvents=Object.assign([],n),e=this.gameEvents[0],this.initializeData=e.eventData.initData,this.currentEventIndex=0;const t=Object.assign({},this.initializeData.player);this.currentState={state:0,elapsedTime:0,totalPauseTime:0,carryMoney:0,stealMoney:0,wantedLevel:0,player:{position:t.position,speed:t.speed,recordTime:0},polices:Object.assign([],this.initializeData.polices),grabInfo:{isGrabbing:!1,startTime:-1,maxTimeToPoliceArrive:-1,gameNumber:-1}};for(var i={},a=1;a<this.gameEvents.length-1;a++)if(0==(i=this.validateEvent(this.gameEvents[a])).result)return i;return i=this.validateBosses()}return this.getResult(!1,"Invalid gameEvents data, can not find initData on EVENT_START_RECORD")}},this.validateAndGetScore=function(t){return 1==this.validate(t).result?this.currentState.stealMoney:-1},this.validateEvent=function(t){switch(t.eventCode){case 1:return this.validate_EVENT_START_GRAB_MONEY(t);case 2:return this.validate_EVENT_END_GRAB_MONEY(t);case 3:return this.validate_EVENT_MONEY_TO_VAN(t);case 4:return this.validate_EVENT_BE_BUSTED(t);case 5:return this.validate_EVENT_RESPAWN(t);case 6:return this.validate_EVENT_SPAWN_HIGH_LEVEL_POLICE(t);case 7:return this.validate_EVENT_UNSPAWN_HIGH_LEVEL_POLICE(t);case 10:return this.validate_EVENT_PAUSE_GAME(t);case 11:return this.validate_EVENT_UN_PAUSE_GAME(t)}return this.getResult(!1,"Invalid GameEvent code: "+t.eventCode)},this.validateSpeed=function(t,e,i,a,n){const r=Vector.create(e.x,e.y),s=Vector.create(a.x,a.y).sub(r).length(),o=1e3*s/n-500;return o>i-t?this.getResult(!1,"Invalid character movement, character moved to fast or teleport; distance: "+s+", minMoveTime: "+o+", realMoveTime: "+(i-t)):this.getResult(!0,"OK")},this.validate_EVENT_START_GRAB_MONEY=function(t){if(!0===this.currentState.grabInfo.isGrabbing)return this.getResult(!1,"Invalid EVENT_START_GRAB_MONEY, player is grabbing money can not start a new grab when the first one is not completed.");const e=t.eventData,i=this.validateSpeed(this.currentState.player.recordTime,this.currentState.player.position,t.elapsedTime,e.position,this.currentState.player.speed);if(0==i.result)return i;if(!(e.polices&&Array.isArray(e.polices)&&e.polices.length>0))return this.getResult(!1,"Invalid EVENT_START_GRAB_MONEY, no polices data on  gameEvent");{this.recordPlayerPosition(t);const i=Vector.create(e.position.x,e.position.y);for(var a=-1e6,n=1e6,r=0;r<e.polices.length;r++){const t=e.polices[r],s=i.sub(Vector.create(t.position.x,t.position.y)).length();s>a&&(a=s),n>t.speed&&(n=t.speed)}this.currentState.state=3,this.currentState.grabInfo.isGrabbing=!0,this.currentState.grabInfo.gateNumber=e.gateNumber,this.currentState.grabInfo.startTime=t.elapsedTime,this.currentState.grabInfo.maxTimeToPoliceArrive=1e3*a/n}return this.getResult(!0,"OK")},this.validate_EVENT_END_GRAB_MONEY=function(t){if(!1===this.currentState.grabInfo.isGrabbing)return this.getResult(!1,"Invalid EVENT_END_GRAB_MONEY, player is not in grabbing state");{const i=t.elapsedTime-this.currentState.grabInfo.startTime;if(i-500>this.currentState.grabInfo.maxTimeToPoliceArrive)return this.getResult(!1,"Invalid EVENT_END_GRAB_MONEY, player is stayed to long on the gate, polices must be arrived, maxStayTime: "+this.currentState.grabInfo.maxTimeToPoliceArrive+", stayTime: "+i);if(t.eventData.gateNumber!=this.currentState.grabInfo.gateNumber)return this.getResult(!1,"Invalid EVENT_END_GRAB_MONEY, player enter the a gate but exit at another gate number");{var e=10*Math.floor(i/100);const a=t.eventData.carryMoney-this.currentState.carryMoney;if(Math.abs(e-a)>10)return this.getResult(!1,"Invalid EVENT_END_GRAB_MONEY, player got more than or less than the expectation of money from the bank, got: "+a+", expect: "+e);this.currentState.carryMoney=t.eventData.carryMoney,this.recordPlayerPosition(t),this.currentState.state=1,this.cancelRobbingAndResetGrabInfo()}}return this.getResult(!0,"OK")},this.validate_EVENT_MONEY_TO_VAN=function(t){const e=this.validateSpeed(this.currentState.player.recordTime,this.currentState.player.position,t.elapsedTime,t.eventData.position,this.currentState.player.speed);if(0==e.result)return e;if(t.eventData.addedMoney>0){if(1!=this.currentState.state)return this.getResult(!1,"Invalid EVENT_MONEY_TO_VAN, player must be be chased when back to van");if(this.currentState.carryMoney!=t.eventData.addedMoney)return this.getResult(!1,"Invalid EVENT_MONEY_TO_VAN, estimate body carring money ("+this.currentState.carryMoney+") back to van is not matched to the real("+t.eventData.addedMoney+") money that player is carring");const e=this.currentState.stealMoney+this.currentState.carryMoney;if(e!=t.eventData.totalMoney)return this.getResult(!1,"Invalid EVENT_MONEY_TO_VAN, estimate total money ("+e+") after back to van is not matched to the real money ("+t.eventData.totalMoney+") that player steal");this.currentState.stealMoney+=this.currentState.carryMoney,this.currentState.carryMoney=0,this.currentState.state=0,this.recordPlayerPosition(t)}return this.getResult(!0,"OK")},this.validate_EVENT_BE_BUSTED=function(t){var e=this.currentState.carryMoney;if(1==this.currentState.grabInfo.isGrabbing){const i=t.elapsedTime-this.currentState.grabInfo.startTime;e=this.currentState.carryMoney+10*Math.floor(i/100)}return Math.abs(e-t.eventData.lostMoney)>10?this.getResult(!1,"Invalid EVENT_BE_BUSTED, amout of carring money is not match when be busted, estimateLost: "+e+", realLost: "+t.eventData.lostMoney):(3==this.currentState.state&&this.cancelRobbingAndResetGrabInfo(),this.currentState.state=2,this.currentState.carryMoney=0,this.recordPlayerPosition(t),this.getResult(!0,"OK"))},this.validate_EVENT_RESPAWN=function(t){return 2!=this.currentState.state?this.getResult(!1,"Invalid EVENT_RESPAWN, player only be respawned up on be busted before"):(this.currentState.state=0,this.recordPlayerPosition(t),this.getResult(!0,"OK"))},this.validate_EVENT_SPAWN_HIGH_LEVEL_POLICE=function(t){return this.currentState.polices.push(Object.assign({},t.eventData.boss)),this.getResult(!0,"OK")},this.validate_EVENT_UNSPAWN_HIGH_LEVEL_POLICE=function(t){return this.currentState.polices.splice(this.currentState.polices.length-1,1),this.getResult(!0,"OK")},this.validate_EVENT_PAUSE_GAME=function(t){return this.getResult(!0,"OK - IGNORE")},this.validate_EVENT_UN_PAUSE_GAME=function(t){return this.getResult(!0,"OK - IGNORE")},this.validateBosses=function(){for(var e=0,i=0;i<t.length&&this.currentState.stealMoney>=t[i];i++)e++;var a=0,n=0;for(i=0;i<this.gameEvents.length;i++){const t=this.gameEvents[i];if(6==t.eventCode?a++:7==t.eventCode&&n++,n>a)return this.getResult(!1,"The number of unspawn commands: "+n+" never greater than spawn commands: "+a)}return this.gameEvents[this.gameEvents.length-1].elapsedTime>=7e4&&3==e&&(e=4),e!=a-n?this.getResult(!1,"Invalid number of bosses be spawned, expect: "+e+", get: "+(a-n)):this.getResult(!0,"OK")}},bankRobberValidator=new BankRobberValidator;